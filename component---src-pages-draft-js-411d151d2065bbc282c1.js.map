{"version":3,"sources":["webpack://blog/./src/components/Bio.js","webpack://blog/./src/pages/draft.js"],"names":["data","useStaticQuery","site","siteMetadata","author","social","className","S","layout","formats","src","width","height","quality","alt","location","siteTitle","title","edges","allMarkdownRemark","length","map","edge","node","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"+3BAiDA,IAtCY,WAAO,IAAD,IACVA,GAAOC,oBAAe,cAiBhB,UAAGD,EAAKE,KAAKC,oBAAb,OAAG,EAAwBC,OAC3B,UAAGJ,EAAKE,KAAKC,oBAAb,OAAG,EAAwBE,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,gCACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,yB,+FC+BN,UA1DkB,SAAC,GAAwB,IAAD,EAArBd,EAAqB,EAArBA,KAAMe,EAAe,EAAfA,SACnBC,GAAY,UAAAhB,EAAKE,KAAKC,oBAAV,eAAwBc,QAAxB,QACZC,EAAQlB,EAAKmB,kBAAkBD,MACrC,OAAqB,IAAjBA,EAAME,OAEN,gBAAC,IAAD,CAAQL,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,sBAAIX,UAAU,cACXY,EAAMG,KAAI,SAAAC,GACT,IAAML,EAAQK,EAAKC,KAAKC,YAAYP,OAASK,EAAKC,KAAKE,OAAOC,KAE9D,OACE,sBAAIC,IAAKL,EAAKC,KAAKE,OAAOC,MACxB,2BACEpB,UAAU,iBACVsB,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIT,EAAKC,KAAKE,OAAOC,KAAMM,SAAS,OACxC,wBAAMA,SAAS,YAAYf,KAG/B,6BAAQK,EAAKC,KAAKC,YAAYS,OAEhC,+BACE,qBACEC,wBAAyB,CACvBC,OACEb,EAAKC,KAAKC,YAAYY,aAAed,EAAKC,KAAKc,SAEnDL,SAAS","file":"component---src-pages-draft-js-411d151d2065bbc282c1.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../../static/images/photo.jpg\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {/* <p>111</p> */}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/Bio\"\nimport Layout from \"../components/Layout\"\nimport Seo from \"../components/Seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const edges = data.allMarkdownRemark.edges\n  if (edges.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All edges\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <ol className=\"title_list\">\n        {edges.map(edge => {\n          const title = edge.node.frontmatter.title || edge.node.fields.slug\n\n          return (\n            <li key={edge.node.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h3>\n                    <Link to={edge.node.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h3>\n                  <small>{edge.node.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html:\n                        edge.node.frontmatter.description || edge.node.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { draft: { eq: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}